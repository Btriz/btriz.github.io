/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Graphfun (https://sketchfab.com/the_3d_animate_guy)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ufo-f7ac46de718a444384a73e953d49997c
Title: UFO
*/
import type { JSX } from 'react';

import { useEffect, useRef } from 'react';
import * as THREE from 'three';
import ufoScene from '../assets/3d/ufo.glb';
import { useAnimations, useGLTF } from '@react-three/drei';

type UfoProps = JSX.IntrinsicElements['group'] & {
  isRotating: boolean;
  rotationDirection: 1 | -1; // 1 = horário, -1 = anti-horário
}

const Ufo = ({ isRotating, rotationDirection, ...props }: UfoProps) => {
  const ufoRef = useRef<THREE.Group>(null);
  const { scene, animations } = useGLTF(ufoScene);
  const { actions } = useAnimations(animations, ufoRef);

  useEffect(() => {
    const action = actions['ArmatureAction.001'];
    if (action) {
      action.timeScale = isRotating ? rotationDirection : 0;
      if (isRotating) {
        action.play();
      } else {
        action.timeScale = 0.2 * rotationDirection; // velocidade reduzida
        action.play();
      }
    }
  }, [actions, isRotating, rotationDirection]);

  return (
    <mesh {...props}>
      <primitive object={scene} ref={ufoRef} />
    </mesh>
  );
};

export default Ufo;
