/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: victxr292 (https://sketchfab.com/victxr292)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mr-write-38680575453f4bbf8c3c1c2a38948ff2
Title: Mr Write
*/
import type { GLTF } from 'three-stdlib';

import * as THREE from 'three';
import { useEffect, useRef, type JSX } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import pencilScene from '../assets/3d/pencil.glb';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    ['����������002_����������������006_0']: THREE.Mesh
    ['����������002_����������������007_0']: THREE.Mesh
    ['����������003_����������������006_0']: THREE.Mesh
    ['����������003_����������������007_0']: THREE.Mesh
    ['����������005_����������������006_0']: THREE.Mesh
    ['����������005_����������������007_0']: THREE.Mesh
    ['����������006_����������������006_0']: THREE.Mesh
    ['����������006_����������������007_0']: THREE.Mesh
    Object_21: THREE.SkinnedMesh
    Object_22: THREE.SkinnedMesh
    Object_23: THREE.SkinnedMesh
    Object_24: THREE.SkinnedMesh
    Object_25: THREE.SkinnedMesh
    Object_26: THREE.SkinnedMesh
    Object_27: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    ['.006']: THREE.MeshStandardMaterial
    ['.007']: THREE.MeshStandardMaterial
    ['.005']: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
    ['.003']: THREE.MeshStandardMaterial
    ['.004']: THREE.MeshStandardMaterial
    ['.001']: THREE.MeshStandardMaterial
    ['.002']: THREE.MeshStandardMaterial
  }
}

type PencilProps = Omit<JSX.IntrinsicElements['group'], 'position' | 'rotation'> & {
  currentAnimation: string;
  position?: [number, number, number];
  rotation?: [number, number, number];
}

const Pencil = ({
  currentAnimation,
  position = [0, 0, 0],
  rotation = [0, 0, 0],
  ...props
}: PencilProps) => {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(pencilScene) as unknown as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const list = Object.values(actions);
    const eyes = list[0];
    const front = list[2];
    const back = list[4];

    eyes?.play();

    let alternate = true;
    let timer: ReturnType<typeof setTimeout>;

    function loop() {
      if (alternate) {
        front?.reset().play();
        back?.stop();
      } else {
        back?.reset().play();
        front?.stop();
      }
      alternate = !alternate;
      timer = setTimeout(loop, 3000);
    }

    loop();

    return () => {
      eyes?.stop();
      front?.stop();
      back?.stop();
      clearTimeout(timer);
    };
  }, [actions]);

  useFrame(({ clock }) => {
    if (!group.current) return;
    const t = clock.getElapsedTime();

    group.current.position.set(...position);
    group.current.rotation.set(...rotation);

    if (currentAnimation === 'idle') {
      group.current.position.y = position[1] + Math.sin(t) * 0.15;
      group.current.rotation.z = rotation[2] + Math.sin(t * 0.5) * 0.05;
    } else if (currentAnimation === 'walk') {
      group.current.position.x = position[0] + Math.sin(t * 2) * 0.3;
      group.current.rotation.y = rotation[1] + Math.sin(t * 2) * 0.2;
      group.current.position.y = position[1] + Math.sin(t) * 0.12;
    } else if (currentAnimation === 'hit') {
      group.current.position.y = position[1] + Math.abs(Math.sin(t * 6)) * 0.4;
      group.current.rotation.x = rotation[0] + Math.sin(t * 6) * 0.2;
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="403b892a720d418e8aa3283e9736cd9afbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="����������002"
                  position={[0, -0.137, -1.096]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                >
                  <mesh
                    name="����������002_����������������006_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������002_����������������006_0'].geometry}
                    material={materials['.006']}
                  />

                  <mesh
                    name="����������002_����������������007_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������002_����������������007_0'].geometry}
                    material={materials['.007']}
                  />
                </group>

                <group
                  name="����������003"
                  position={[-34.798, 7.033, -1.278]}
                  rotation={[-Math.PI / 2, 0.019, 0]}
                  scale={100}
                >
                  <mesh
                    name="����������003_����������������006_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������003_����������������006_0'].geometry}
                    material={materials['.006']}
                  />

                  <mesh
                    name="����������003_����������������007_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������003_����������������007_0'].geometry}
                    material={materials['.007']}
                  />
                </group>

                <group name="����������004" rotation={[-Math.PI / 2, 0, 0]} scale={100} />

                <group name="����������005" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <mesh
                    name="����������005_����������������006_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������005_����������������006_0'].geometry}
                    material={materials['.006']}
                  />

                  <mesh
                    name="����������005_����������������007_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������005_����������������007_0'].geometry}
                    material={materials['.007']}
                  />
                </group>

                <group name="����������006" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <mesh
                    name="����������006_����������������006_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������006_����������������006_0'].geometry}
                    material={materials['.006']}
                  />

                  <mesh
                    name="����������006_����������������007_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['����������006_����������������007_0'].geometry}
                    material={materials['.007']}
                  />
                </group>

                <group name="����������������" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <group name="Object_18">
                    <primitive object={nodes._rootJoint} />

                    <skinnedMesh
                      name="Object_21"
                      geometry={nodes.Object_21.geometry}
                      material={materials['.005']}
                      skeleton={nodes.Object_21.skeleton}
                    />

                    <skinnedMesh
                      name="Object_22"
                      geometry={nodes.Object_22.geometry}
                      material={materials['.006']}
                      skeleton={nodes.Object_22.skeleton}
                    />

                    <skinnedMesh
                      name="Object_23"
                      geometry={nodes.Object_23.geometry}
                      material={materials.material}
                      skeleton={nodes.Object_23.skeleton}
                    />

                    <skinnedMesh
                      name="Object_24"
                      geometry={nodes.Object_24.geometry}
                      material={materials['.003']}
                      skeleton={nodes.Object_24.skeleton}
                    />

                    <skinnedMesh
                      name="Object_25"
                      geometry={nodes.Object_25.geometry}
                      material={materials['.004']}
                      skeleton={nodes.Object_25.skeleton}
                    />

                    <skinnedMesh
                      name="Object_26"
                      geometry={nodes.Object_26.geometry}
                      material={materials['.001']}
                      skeleton={nodes.Object_26.skeleton}
                    />

                    <skinnedMesh
                      name="Object_27"
                      geometry={nodes.Object_27.geometry}
                      material={materials['.002']}
                      skeleton={nodes.Object_27.skeleton}
                    />

                    <group name="Object_20" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
};

export default Pencil;
